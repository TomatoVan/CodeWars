f=
''
[
'\
t\
r\
i\
m'
][
'\
b\
i\
n\
d'
]`
H\
e\
l\
l\
o\
,\
 \
w\
o\
r\
l\
d\
!`


/* 
''['trim']- Начальная пустая строка ''имеет строковые методы, подобные .trim()доступным для нее. Используя обозначение скобок, мы можем получить доступ к методу обрезки с помощью ''['trim'].

''['trim']['bind']- вместо того, чтобы вызывать метод обрезки (что потребовало бы добавления () в конец), мы вызываем .bind()метод, который является частью прототипа обрезки, снова используя обозначение скобок. Bind берет свой начальный аргумент и связывает его с предыдущей функцией (обрезкой) как ключевое слово this .

''['trim']['bind']`Hello, world!` - Последняя часть здесь - это передача методу строки 'Hello, world!'внутри массива .bind(). Обозначение здесь представляет собой строковый литерал, используемый в качестве помеченного шаблона . Это позволяет использовать литерал шаблона в качестве аргумента массива для его предшествующего «тега», в данном случае связанной функции. Теперь это эквивалентно ['Hello, world!']. Trim (). Trim преобразует массив строк в строку с каждым элементом, разделенным запятой. Но поскольку есть только 1 элемент, возвращается этот единственный элемент.
*/